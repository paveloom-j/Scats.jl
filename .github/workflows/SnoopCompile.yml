name: SnoopCompile

on:
  push:
    branches:
      - develop
      - feature

defaults:
  run:
    shell: bash

jobs:
  SnoopCompile:
    if: "!contains(github.event.head_commit.message, '[no snoop]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5.0'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - x32
          - x64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
      - name: Install dependencies
        run: |
          julia --project -e 'using Pkg; Pkg.instantiate();'
          julia -e 'using Pkg; Pkg.add("SnoopCompile"); using SnoopCompile; SnoopCompile.addtestdep();'
      - name: Generate precompile files
        run: julia --project -e 'include(".github/deps/SnoopCompile/snoop_bot.jl")'
      - name: Run benchmarks
        run: julia --project -e 'include(".github/deps/SnoopCompile/snoop_bench.jl")'
      - name: Upload an artifact
        uses: actions/upload-artifact@v2
        with:
          path: ./

  PR:
    if: "!contains(github.event.head_commit.message, '[no snoop]')"
    needs: SnoopCompile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download the artifact
        uses: actions/download-artifact@v2
      - name: Move the content of the directory to the root
        run: |
          rsync -a artifact/* ./
          rm -d -r artifact
      - name: Discard unrelated changes
        run: |
          test -f 'Project.toml' && git checkout -- 'Project.toml'
          git ls-files 'Manifest.toml' | grep . && git checkout -- 'Manifest.toml'
          (git diff -w --no-color || git apply --cached --ignore-whitespace && git checkout -- . && git reset && git add -p) || echo done
      - name: Format precompile_includer.jl
        run: julia -e 'using Pkg; Pkg.add("JuliaFormatter"); using JuliaFormatter; format_file("src/precompile_includer.jl")'
      - name: Create a PR
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update precompiles
          committer: github-actions[bot] github-actions[bot]@users.noreply.github.com
          title: "SnoopCompile: update precompiles"
          branch: "snoop"


  skip:
    if: "contains(github.event.head_commit.message, '[no snoop]')"
    runs-on: ubuntu-latest
    steps:
      - name: ðŸš« The action has been aborted.
        run: echo The action was cancelled by specifying [no snoop] in the commit message.