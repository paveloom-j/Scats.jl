var documenterSearchIndex = {"docs":
[{"location":"lib/internals/module/#Module-1","page":"Module","title":"Module","text":"","category":"section"},{"location":"lib/internals/module/#","page":"Module","title":"Module","text":"All inner parts of this package are conveniently hidden in the inner module Scats.internal:","category":"page"},{"location":"lib/internals/module/#","page":"Module","title":"Module","text":"Scats.internal","category":"page"},{"location":"lib/internals/module/#Scats.internal","page":"Module","title":"Scats.internal","text":"A module containing all inner parts of this package. Is not advisable to be used directly.\n\n\n\n\n\n","category":"module"},{"location":"lib/internals/module/#","page":"Module","title":"Module","text":"The next section presents the module containing the precisions and the formats of numbers used in the package.","category":"page"},{"location":"lib/internals/module/#","page":"Module","title":"Module","text":"The following sections present the main types used inside the package which are appearing in an API instance:","category":"page"},{"location":"lib/internals/module/#","page":"Module","title":"Module","text":"Input: input data;\nGen: generator;\nResult: result data.","category":"page"},{"location":"lib/internals/module/#","page":"Module","title":"Module","text":"The last section shows what extras are developed for the usage inside the package.","category":"page"},{"location":"lib/internals/prec/#Prec-1","page":"Prec","title":"Prec","text":"","category":"section"},{"location":"lib/internals/prec/#","page":"Prec","title":"Prec","text":"Modules = [Scats.internal.prec]","category":"page"},{"location":"lib/internals/prec/#Scats.internal.prec","page":"Prec","title":"Scats.internal.prec","text":"Module containing types of numbers used in the package, and also their according formats.\n\n\n\n\n\n","category":"module"},{"location":"lib/internals/prec/#Scats.internal.prec.RF","page":"Prec","title":"Scats.internal.prec.RF","text":"Format of real values. Default values:\n\nfor RT = Float64: \"% .15E\";\nfor RT = Float32: \"% .6E\";\nfor RT = Float16: \"% .3E\".\n\n\n\n\n\n","category":"constant"},{"location":"lib/internals/prec/#Scats.internal.prec.IT","page":"Prec","title":"Scats.internal.prec.IT","text":"Type of integer values. Default value: typeof(1).\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/prec/#Scats.internal.prec.RT","page":"Prec","title":"Scats.internal.prec.RT","text":"Type of real values. Default value: typeof(1.0).\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/result/#Result-1","page":"Result","title":"Result","text":"","category":"section"},{"location":"lib/internals/result/#","page":"Result","title":"Result","text":"Modules = [Scats.internal.result]","category":"page"},{"location":"lib/internals/result/#Scats.internal.result","page":"Result","title":"Scats.internal.result","text":"Module containing a type for interaction with result data.\n\n\n\n\n\n","category":"module"},{"location":"lib/internals/result/#Scats.internal.result.ResultStruct","page":"Result","title":"Scats.internal.result.ResultStruct","text":"ResultStruct()\n\nInstantiate this type to interact with result data.\n\nData\n\nΔt::RT=0: sample step;\nt::Vector{RT}=[]: time array;\nx::Vector{RT}=[]: values array;\nq::RT=0: significance level;\nthreshold::RT=0: signal threshold;\nX_FFT_ABS::Vector{RT}=[]: values array;\nν::Vector{RT}=[]: periodogram frequencies array;\nD::Vector{RT}=[]: periodogram values array;\nc::Vector{RT}=[]: correlogram values array;\ncw::Vector{RT}=[]: weighted correlogram values array;\nDw::Vector{RT}=[]: smoothed periodogram values array.\n\nMethods\n\nreset!(): reset an instance to default values.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/result/#Scats.internal.result.reset!-Tuple{Scats.internal.result.ResultStruct}","page":"Result","title":"Scats.internal.result.reset!","text":"reset!(result::ResultStruct)\n\nReset an instance of ResultStruct to default values.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.gen_example(file)\ns.gen(file)\ns.gen!()\n# generate result data\ns.result.reset!()\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/extras/#Extras-1","page":"Extras","title":"Extras","text":"","category":"section"},{"location":"lib/internals/extras/#","page":"Extras","title":"Extras","text":"Modules = [Scats.internal.extras]","category":"page"},{"location":"lib/internals/extras/#Scats.internal.extras","page":"Extras","title":"Scats.internal.extras","text":"Module containing extras for the package.\n\n\n\n\n\n","category":"module"},{"location":"lib/internals/extras/#Base.println-Tuple{IO,Array{Float64,1}}","page":"Extras","title":"Base.println","text":"println(io::IO, array::Array{RT, 1})\n\nPrint an array containing RT values.\n\nUsage\n\nusing Scats: internal.prec.RT, internal.extras.println\nx = Array{RT}([1.0, 2.0, 3.0])\nprintln(x)\n\n# output\n\n 1.000000000000000E+00    2.000000000000000E+00    3.000000000000000E+00\n\nNote: this doctest requires x64 architecture.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/extras/#Base.println-Tuple{IO,Float64}","page":"Extras","title":"Base.println","text":"println(io::IO, value::RT)\n\nPrint an RT value.\n\nUsage\n\nusing Scats: internal.prec.RT, internal.extras.println\nx = RT(1.0)\nprintln(x)\n\n# output\n\n 1.000000000000000E+00\n\nNote: this doctest requires x64 architecture.\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#API-1","page":"Public Interface","title":"Public Interface","text":"","category":"section"},{"location":"lib/public/#","page":"Public Interface","title":"Public Interface","text":"This part of the package is the only one supposed to be used by a regular user. All recommended for usage types and methods are accessible from an instance of Scats.api. For the inner parts of this package one should consider reading the pages in the Internals section.","category":"page"},{"location":"lib/public/#","page":"Public Interface","title":"Public Interface","text":"Scats.api","category":"page"},{"location":"lib/public/#Scats.api","page":"Public Interface","title":"Scats.api","text":"api()\n\nInstantiate an instance of Scats API to get access to the public interface.\n\nTypes\n\ninput: input data;\ngen: generator;\nresult: result data.\n\nMethods\n\nfor input:\nread_input!(file::AbstractString): read input data from a file;\nwrite_input(file::AbstractString): write input data to a file;\ninput_example(file::AbstractString): generate an example of the input/output file.\n\nUsage\n\nusing Scats\ns = Scats.api()\n\n\n\n\n\n","category":"type"},{"location":"#Scats.jl-1","page":"Home","title":"Scats.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Realization of the SCATS library in Julia.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"A package for completing spectral correlation analysis of time series.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"note: Note\nThis package was developed primarily for learning purposes and is not advised to be used in production.","category":"page"},{"location":"#Features-1","page":"Home","title":"Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"generation of the uniform time series with custom number of harmonics;\neliminating a linear trend from time series;\nperiodogram and correlogram computations using FFT;\nweighted correlogram computation using Tukey weighting function;\nsmoothed periodogram computation using FFT.","category":"page"},{"location":"#Project-management-1","page":"Home","title":"Project management","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"ZenHub is being used for agile project management. Download the extension to see the board on the repository's landing page.","category":"page"},{"location":"#Library-1","page":"Home","title":"Library","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\"lib/public.md\"]","category":"page"},{"location":"lib/internals/gen/#Gen-1","page":"Gen","title":"Gen","text":"","category":"section"},{"location":"lib/internals/gen/#","page":"Gen","title":"Gen","text":"Modules = [Scats.internal.gen]","category":"page"},{"location":"lib/internals/gen/#Scats.internal.gen","page":"Gen","title":"Scats.internal.gen","text":"Module containing a type for interaction with the time series generator.\n\n\n\n\n\n","category":"module"},{"location":"lib/internals/gen/#Scats.internal.gen.GenStruct","page":"Gen","title":"Scats.internal.gen.GenStruct","text":"GenStruct()\n\nInstantiate this type to interact with the time series generator.\n\nData\n\nN::IT=0: sample size;\nΔt::RT=0: sample step;\nq::RT=0: significance level;\nα::RT=0: parameter α of a linear trend;\nβ::RT=0: parameter β of a linear trend;\nr::IT=0: number of harmonics;\nA::Vector{RT}=[]: amplitudes array;\nν::Vector{RT}=[]: frequencies array;\nϕ::Vector{RT}=[]: phase shifts array;\nγ::RT=0: «signal-to-noise» ratio.\n\nMethods\n\nread!(file::AbstractString): read generator parameters from a file;\nexample(file::AbstractString): generate an example of a file containing the generator parameters;\ngen(): generate time series;\nreset!(): reset an instance to default values.\n\nNote\n\nData can be also read calling an instance like so:\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.gen.example(file)\ns.gen(file)\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.gen!-Tuple{Scats.internal.gen.GenStruct,Scats.internal.input.InputStruct}","page":"Gen","title":"Scats.internal.gen.gen!","text":"gen!(gen::GenStruct, input::InputStruct)\n\nGenerate time series for an instance of InputStruct using generator parameters from an instance of GenStruct.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.gen.example(file)\ns.gen!()\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenEOF","page":"Gen","title":"Scats.internal.gen.ScatsGenEOF","text":"ScatsGenEOF <: Exception\n\nException thrown when an end of file occurred.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenIsADir","page":"Gen","title":"Scats.internal.gen.ScatsGenIsADir","text":"ScatsGenIsADir <: Exception\n\nException thrown when the path is a directory.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenNotAFile","page":"Gen","title":"Scats.internal.gen.ScatsGenNotAFile","text":"ScatsGenNotAFile <: Exception\n\nException thrown when the file is not found.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_A","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_A","text":"ScatsGenWR_A <: Exception\n\nException thrown when an input for A is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_N","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_N","text":"ScatsGenWR_N <: Exception\n\nException thrown when an input for N is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_q","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_q","text":"ScatsGenWR_q <: Exception\n\nException thrown when an input for q is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_r","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_r","text":"ScatsGenWR_r <: Exception\n\nException thrown when an input for r is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_Δt","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_Δt","text":"ScatsGenWR_Δt <: Exception\n\nException thrown when an input for Δt is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_α","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_α","text":"ScatsGenWR_α <: Exception\n\nException thrown when an input for α is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_β","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_β","text":"ScatsGenWR_β <: Exception\n\nException thrown when an input for β is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_γ","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_γ","text":"ScatsGenWR_γ <: Exception\n\nException thrown when an input for γ is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_ν","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_ν","text":"ScatsGenWR_ν <: Exception\n\nException thrown when an input for ν is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.ScatsGenWR_ϕ","page":"Gen","title":"Scats.internal.gen.ScatsGenWR_ϕ","text":"ScatsGenWR_ϕ <: Exception\n\nException thrown when an input for ϕ is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/gen/#Scats.internal.gen.example-Tuple{AbstractString}","page":"Gen","title":"Scats.internal.gen.example","text":"example(file::AbstractString)\n\nGenerate an example of a file containing the generator parameters.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.gen.example(file)\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/gen/#Scats.internal.gen.read!-Tuple{Scats.internal.gen.GenStruct,AbstractString}","page":"Gen","title":"Scats.internal.gen.read!","text":"read!(gen::GenStruct, file::AbstractString)\n\nRead generator parameters from a file to an instance of GenStruct.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.gen.example(file)\ns.gen.read!(file)\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/gen/#Scats.internal.gen.reset!-Tuple{Scats.internal.gen.GenStruct}","page":"Gen","title":"Scats.internal.gen.reset!","text":"reset!(gen::GenStruct)\n\nReset an instance of GenStruct to default values.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.gen.example(file)\ns.gen.read!(file)\ns.gen.reset!()\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/input/#Input-1","page":"Input","title":"Input","text":"","category":"section"},{"location":"lib/internals/input/#","page":"Input","title":"Input","text":"Modules = [Scats.internal.input]","category":"page"},{"location":"lib/internals/input/#Scats.internal.input","page":"Input","title":"Scats.internal.input","text":"Module containing a type for storage and interaction with input data.\n\n\n\n\n\n","category":"module"},{"location":"lib/internals/input/#Scats.internal.input.InputStruct","page":"Input","title":"Scats.internal.input.InputStruct","text":"InputStruct()\n\nInstantiate this type to interact with input data.\n\nData\n\nN::IT=0: sample size;\nΔt::RT=0: sample step;\nq::RT=0: significance level;\nt::Vector{RT}=[]: time array;\nx::Vector{RT}=[]: values array.\n\nMethods\n\nread!(file::AbstractString): read input data from a file;\nwrite(file::AbstractString): write input data to a file;\nexample(file::AbstractString): generate an example of the input/output file;\nreset!(): reset an instance to default values.\n\nNote\n\nData can be also read calling an instance like so:\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.input.example(file)\ns.input(file)\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputEOF","page":"Input","title":"Scats.internal.input.ScatsInputEOF","text":"ScatsInputEOF <: Exception\n\nException thrown when an end of file occurred.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputIsADir","page":"Input","title":"Scats.internal.input.ScatsInputIsADir","text":"ScatsInputIsADir <: Exception\n\nException thrown when the path is a directory.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputNotAFile","page":"Input","title":"Scats.internal.input.ScatsInputNotAFile","text":"ScatsInputNotAFile <: Exception\n\nException thrown when the file is not found.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputWR_N","page":"Input","title":"Scats.internal.input.ScatsInputWR_N","text":"ScatsInputWR_N <: Exception\n\nException thrown when an input for N is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputWR_q","page":"Input","title":"Scats.internal.input.ScatsInputWR_q","text":"ScatsInputWR_q <: Exception\n\nException thrown when an input for q is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputWR_t","page":"Input","title":"Scats.internal.input.ScatsInputWR_t","text":"ScatsInputWR_t <: Exception\n\nException thrown when an input for t is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputWR_x","page":"Input","title":"Scats.internal.input.ScatsInputWR_x","text":"ScatsInputWR_x <: Exception\n\nException thrown when an input for x is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.ScatsInputWR_Δt","page":"Input","title":"Scats.internal.input.ScatsInputWR_Δt","text":"ScatsInputWR_Δt <: Exception\n\nException thrown when an input for Δt is wrong.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/input/#Scats.internal.input.example-Tuple{AbstractString}","page":"Input","title":"Scats.internal.input.example","text":"example(file::AbstractString)\n\nGenerate an example of the input/output file.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.input.example(file)\n\nSee: InputStruct.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/input/#Scats.internal.input.read!-Tuple{Scats.internal.input.InputStruct,AbstractString}","page":"Input","title":"Scats.internal.input.read!","text":"read!(input::InputStruct, file::AbstractString)\n\nRead input data from a file to an instance of InputStruct.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.input.example(file)\ns.input.read!(file)\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/input/#Scats.internal.input.reset!-Tuple{Scats.internal.input.InputStruct}","page":"Input","title":"Scats.internal.input.reset!","text":"reset!(input::InputStruct)\n\nReset an instance of InputStruct to default values.\n\nUsage\n\nusing Scats\ns = Scats.api()\ns.input.reset!()\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/input/#Scats.internal.input.write-Tuple{Scats.internal.input.InputStruct,AbstractString}","page":"Input","title":"Scats.internal.input.write","text":"write(input::InputStruct, file::AbstractString)\n\nWrite input data from an instance of InputStruct to a file.\n\nUsage\n\nusing Scats\ns = Scats.api()\nfile, _ = mktemp()\ns.input.write(file)\n\n\n\n\n\n","category":"method"}]
}
